'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
'
Namespace eOfficeWebServiceAPI
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="eOFFICEWebServiceAPISoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class eOFFICEWebServiceAPI
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetAccountAllListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountBranchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountContactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProjectAllListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProjectByAccountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserAllListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveUserListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckAuthorizeUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.XCS.Process.My.MySettings.Default.Process_eOfficeWebServiceAPI_eOFFICEWebServiceAPI
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetAccountAllListCompleted As GetAccountAllListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountBranchCompleted As GetAccountBranchCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountContactCompleted As GetAccountContactCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProjectAllListCompleted As GetProjectAllListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProjectByAccountCompleted As GetProjectByAccountCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserAllListCompleted As GetUserAllListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveUserListCompleted As GetActiveUserListCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckAuthorizeUserCompleted As CheckAuthorizeUserCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountAllList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountAllList() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetAccountAllList", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountAllListAsync()
            Me.GetAccountAllListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountAllListAsync(ByVal userState As Object)
            If (Me.GetAccountAllListOperationCompleted Is Nothing) Then
                Me.GetAccountAllListOperationCompleted = AddressOf Me.OnGetAccountAllListOperationCompleted
            End If
            Me.InvokeAsync("GetAccountAllList", New Object(-1) {}, Me.GetAccountAllListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountAllListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountAllListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountAllListCompleted(Me, New GetAccountAllListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountBranch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountBranch(ByVal AccountID As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetAccountBranch", New Object() {AccountID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountBranchAsync(ByVal AccountID As String)
            Me.GetAccountBranchAsync(AccountID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountBranchAsync(ByVal AccountID As String, ByVal userState As Object)
            If (Me.GetAccountBranchOperationCompleted Is Nothing) Then
                Me.GetAccountBranchOperationCompleted = AddressOf Me.OnGetAccountBranchOperationCompleted
            End If
            Me.InvokeAsync("GetAccountBranch", New Object() {AccountID}, Me.GetAccountBranchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountBranchOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountBranchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountBranchCompleted(Me, New GetAccountBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountContact", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountContact(ByVal AccountID As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetAccountContact", New Object() {AccountID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountContactAsync(ByVal AccountID As String)
            Me.GetAccountContactAsync(AccountID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountContactAsync(ByVal AccountID As String, ByVal userState As Object)
            If (Me.GetAccountContactOperationCompleted Is Nothing) Then
                Me.GetAccountContactOperationCompleted = AddressOf Me.OnGetAccountContactOperationCompleted
            End If
            Me.InvokeAsync("GetAccountContact", New Object() {AccountID}, Me.GetAccountContactOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountContactOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountContactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountContactCompleted(Me, New GetAccountContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectAllList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProjectAllList() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetProjectAllList", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProjectAllListAsync()
            Me.GetProjectAllListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProjectAllListAsync(ByVal userState As Object)
            If (Me.GetProjectAllListOperationCompleted Is Nothing) Then
                Me.GetProjectAllListOperationCompleted = AddressOf Me.OnGetProjectAllListOperationCompleted
            End If
            Me.InvokeAsync("GetProjectAllList", New Object(-1) {}, Me.GetProjectAllListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProjectAllListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProjectAllListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProjectAllListCompleted(Me, New GetProjectAllListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectByAccount", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProjectByAccount(ByVal AccountID As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetProjectByAccount", New Object() {AccountID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProjectByAccountAsync(ByVal AccountID As String)
            Me.GetProjectByAccountAsync(AccountID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProjectByAccountAsync(ByVal AccountID As String, ByVal userState As Object)
            If (Me.GetProjectByAccountOperationCompleted Is Nothing) Then
                Me.GetProjectByAccountOperationCompleted = AddressOf Me.OnGetProjectByAccountOperationCompleted
            End If
            Me.InvokeAsync("GetProjectByAccount", New Object() {AccountID}, Me.GetProjectByAccountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProjectByAccountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProjectByAccountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProjectByAccountCompleted(Me, New GetProjectByAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserAllList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserAllList() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetUserAllList", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserAllListAsync()
            Me.GetUserAllListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserAllListAsync(ByVal userState As Object)
            If (Me.GetUserAllListOperationCompleted Is Nothing) Then
                Me.GetUserAllListOperationCompleted = AddressOf Me.OnGetUserAllListOperationCompleted
            End If
            Me.InvokeAsync("GetUserAllList", New Object(-1) {}, Me.GetUserAllListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserAllListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserAllListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserAllListCompleted(Me, New GetUserAllListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActiveUserList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveUserList() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetActiveUserList", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveUserListAsync()
            Me.GetActiveUserListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveUserListAsync(ByVal userState As Object)
            If (Me.GetActiveUserListOperationCompleted Is Nothing) Then
                Me.GetActiveUserListOperationCompleted = AddressOf Me.OnGetActiveUserListOperationCompleted
            End If
            Me.InvokeAsync("GetActiveUserList", New Object(-1) {}, Me.GetActiveUserListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveUserListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveUserListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveUserListCompleted(Me, New GetActiveUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckAuthorizeUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckAuthorizeUser(ByVal UserName As String, ByVal pwd As String) As clsUserAuthorizedPara
            Dim results() As Object = Me.Invoke("CheckAuthorizeUser", New Object() {UserName, pwd})
            Return CType(results(0),clsUserAuthorizedPara)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckAuthorizeUserAsync(ByVal UserName As String, ByVal pwd As String)
            Me.CheckAuthorizeUserAsync(UserName, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckAuthorizeUserAsync(ByVal UserName As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.CheckAuthorizeUserOperationCompleted Is Nothing) Then
                Me.CheckAuthorizeUserOperationCompleted = AddressOf Me.OnCheckAuthorizeUserOperationCompleted
            End If
            Me.InvokeAsync("CheckAuthorizeUser", New Object() {UserName, pwd}, Me.CheckAuthorizeUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckAuthorizeUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckAuthorizeUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckAuthorizeUserCompleted(Me, New CheckAuthorizeUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class clsUserAuthorizedPara
        
        Private checkUserAuthorizedField As Boolean
        
        Private userParaField As clsUserPara
        
        '''<remarks/>
        Public Property CheckUserAuthorized() As Boolean
            Get
                Return Me.checkUserAuthorizedField
            End Get
            Set
                Me.checkUserAuthorizedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserPara() As clsUserPara
            Get
                Return Me.userParaField
            End Get
            Set
                Me.userParaField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class clsUserPara
        
        Private idField As Long
        
        Private eMPLOYEE_IDField As String
        
        Private nAMEField As String
        
        Private sURNAMEField As String
        
        Private sTAFF_NAMEField As String
        
        Private dEPARTMENT_IDField As Long
        
        Private dEPARTMENT_ABBField As String
        
        Private dEPARTMENT_DESCField As String
        
        Private pOSITION_IDField As Long
        
        Private pOSITION_DESCField As String
        
        Private eMAILField As String
        
        Private uSERNAMEField As String
        
        Private gROUP_IDField As Long
        
        Private gROUP_NAME_ENField As String
        
        Private gROUP_NAME_THField As String
        
        '''<remarks/>
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EMPLOYEE_ID() As String
            Get
                Return Me.eMPLOYEE_IDField
            End Get
            Set
                Me.eMPLOYEE_IDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NAME() As String
            Get
                Return Me.nAMEField
            End Get
            Set
                Me.nAMEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SURNAME() As String
            Get
                Return Me.sURNAMEField
            End Get
            Set
                Me.sURNAMEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property STAFF_NAME() As String
            Get
                Return Me.sTAFF_NAMEField
            End Get
            Set
                Me.sTAFF_NAMEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DEPARTMENT_ID() As Long
            Get
                Return Me.dEPARTMENT_IDField
            End Get
            Set
                Me.dEPARTMENT_IDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DEPARTMENT_ABB() As String
            Get
                Return Me.dEPARTMENT_ABBField
            End Get
            Set
                Me.dEPARTMENT_ABBField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DEPARTMENT_DESC() As String
            Get
                Return Me.dEPARTMENT_DESCField
            End Get
            Set
                Me.dEPARTMENT_DESCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POSITION_ID() As Long
            Get
                Return Me.pOSITION_IDField
            End Get
            Set
                Me.pOSITION_IDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POSITION_DESC() As String
            Get
                Return Me.pOSITION_DESCField
            End Get
            Set
                Me.pOSITION_DESCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EMAIL() As String
            Get
                Return Me.eMAILField
            End Get
            Set
                Me.eMAILField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USERNAME() As String
            Get
                Return Me.uSERNAMEField
            End Get
            Set
                Me.uSERNAMEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GROUP_ID() As Long
            Get
                Return Me.gROUP_IDField
            End Get
            Set
                Me.gROUP_IDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GROUP_NAME_EN() As String
            Get
                Return Me.gROUP_NAME_ENField
            End Get
            Set
                Me.gROUP_NAME_ENField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GROUP_NAME_TH() As String
            Get
                Return Me.gROUP_NAME_THField
            End Get
            Set
                Me.gROUP_NAME_THField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetAccountAllListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountAllListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountAllListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetAccountBranchCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountBranchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountBranchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetAccountContactCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountContactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountContactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetProjectAllListCompletedEventHandler(ByVal sender As Object, ByVal e As GetProjectAllListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProjectAllListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetProjectByAccountCompletedEventHandler(ByVal sender As Object, ByVal e As GetProjectByAccountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProjectByAccountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetUserAllListCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserAllListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserAllListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetActiveUserListCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveUserListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveUserListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CheckAuthorizeUserCompletedEventHandler(ByVal sender As Object, ByVal e As CheckAuthorizeUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckAuthorizeUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As clsUserAuthorizedPara
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),clsUserAuthorizedPara)
            End Get
        End Property
    End Class
End Namespace
